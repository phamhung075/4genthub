input_specification:
  type: Technical specifications, user requirements, existing documentation, product information, code repositories, design files, API specs, user feedback, test results
  format: JSON, Markdown, OpenAPI YAML/JSON, PDF, HTML, .md, .rst, .adoc, .docx, .txt, .csv, code comments, Figma/Sketch files, user feedback forms
  schema:
    technicalSpec: '{ title: string, description: string, requirements: array, version: string }'
    apiSpec: 'LLM JSON/YAML, required fields: info, paths, components'
    userGuide: '{ sections: array, steps: array, images: array, faqs: array }'
    feedback: '{ userId: string, docId: string, rating: number, comments: string }'
  validation: Validate required fields, check for broken links, ensure up-to-date versioning, run spellcheck and linter on Markdown/HTML.
  example: Example example for inputSpec
  validationRules: Example validationRules for inputSpec
