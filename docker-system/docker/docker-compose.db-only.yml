# Database-Only Docker Compose Configuration
# For running PostgreSQL and pgAdmin separately
# No build required - uses official PostgreSQL image

services:
  # PostgreSQL Database (no build - uses official image)
  postgres:
    image: postgres:15-alpine
    container_name: 4genthub-postgres
    env_file:
      - ../../.env.dev
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - 4genthub-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: 4genthub-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - 4genthub-network
    depends_on:
      - postgres
    restart: unless-stopped
    profiles: ["with-pgadmin"]  # Only start when explicitly requested

volumes:
  postgres-data:
    driver: local
  pgadmin-data:
    driver: local

networks:
  4genthub-network:
    external: true
    name: 4genthub-network