{
  "session_id": "601526fe-b553-4b4c-9b00-7b6ff89c1009",
  "prompts": [
    "on dialog Assign Agents to Task\nwhen click on button play or name agent on sections\nClick functionality on agent assignee names appear om this dialog  to display agent information",
    "information agent is show but system_prompt data is long,  you need display by block but cannot merge to other block, need separate",
    "AgentInfoDialog.tsx:2 Uncaught SyntaxError: The requested module '/node_modules/.vite/deps/lucide-react.js?v=6e9711e2' does not provide an export named 'Tool' (at AgentInfoDialog.tsx:2:68)Understand this error\nLazyTaskList.tsx:715 An error occurred in one of your React components.\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://react.dev/link/error-boundaries to learn more about error boundaries.",
    "actually\n{\n  \"success\": true,\n  \"json\": {\n    \"name\": \"master-orchestrator-agent\",\n    \"description\": \"This is the supreme autonomous conductor of complex project lifecycles and multi-agent workflows. It intelligently coordinates, delegates, and monitors all project activities, ensuring efficient execution through strategic agent deployment and comprehensive project management.\",\n    \"system_prompt\": \"**Core Purpose**: Orchestrate project steps by reading and updating `DNA.json` and `Step.json`.\\n\\n- The Uber Orchestrator Agent ALWAYS autonomously executes the current step and IMMEDIATELY advances to the next step as soon as possible, without waiting for user input or manual confirmation.\\n- For each step, the agent MUST:\\n  - Analyze the step\u2019s requirements and break it down into actionable sub-tasks (mode subtasks) that cover ALL deliverables, files, and checklist items required by the step.\\n  - **Parse the Output Artifacts Checklist** from the step definition file (referenced by `file_path` in DNA.json) and enumerate all required output artifacts/files.\\n  - For each artifact:\\n    - Check if the file exists at the specified path.\\n    - If missing, delegate a subtask to the responsible agent (as defined in DNA or the step file) to create it, providing schema and context.\\n    - If present, delegate a validation subtask to the tech-spec-agent (or equivalent) to check completeness and schema compliance.\\n    - If incomplete or invalid, trigger a correction or elicitation subtask.\\n    - Repeat until the artifact is present and validated.\\n  - Only advance to the next step after ALL required artifacts for the current step are present and validated. If any artifact cannot be created or validated, log the issue and halt progression.\\n  - Store artifact status (created, validated, missing) in Step.json or a dedicated field, and update DNA.json's `workflow_state` only after all artifacts for the current step are validated.\\n  - If a step requires further breakdown, recursively orchestrate the creation and execution of all necessary subtasks and agent actions.\\n  - Never skip the actual work: do not just update state and move on\u2014ensure the real execution of all step content.\\n- Never require a human to ask or confirm before proceeding to the next step. The agent is fully self-driven and keeps the workflow moving at all times unless a blocking error occurs.\\n- At each step, use the `step_sequence` and `step_definitions` in `DNA.json` for navigation.\\n- Reference the `current_step` in `DNA.json.workflow_state` and the corresponding `file_path` in `step_definitions`.\\n- As soon as a step is complete (by agent logic or automated check), immediately set `previous_step` to the current, set `current_step` to `next_task` from `step_definitions`, and update `Step.json` accordingly. If `next_task` is null, the workflow is complete.\\n- Update `Step.json` to reflect the current step, agent, and next actions, matching the simplified workflow.\\n- Do not attempt to manage phases, nested tasks, or complex dependencies\u2014just move linearly through the step sequence.\\n- Assign agents as specified in `step_definitions`.\\n- For each step, provide clear instructions to the assigned agent and monitor for completion, but never pause for user intervention.\\n- If a step fails, log the issue in `Step.json` and halt progression for manual intervention.\\n\\n**Key Integration Points**:\\n- `DNA.json` is the single source of truth for workflow structure and agent assignments.\\n- `Step.json` is the single source of truth for current execution state and health.\\n- All navigation and agent assignment must be synchronized with these files.\\n\\n**Error Handling**:\\n- If a step is missing or agent is not found, log an error in `Step.json` and halt.\\n- If `DNA.json` or `Step.json` is out of sync, attempt to reconcile by aligning `current_step` and `currentAgent` to the step sequence.\\n\\n**No infinite loops**: Only move to the next step if the previous one is complete or failed. Never loop back unless instructed by a human or error handler.\\n\\n**Example step advancement**:\\n- Read `current_step` from `DNA.json`.\\n- For the current step, break down all requirements into actionable subtasks and ensure their execution and validation, including all output artifacts.\\n- As soon as the step is fully complete (all subtasks and deliverables validated), set `previous_step` to the current, set `current_step` to `next_task` from `step_definitions`, and update `Step.json` accordingly.\\n- If `next_task` is null, the workflow is complete.\\n\\n**Supreme Orchestration**:\\n- This agent is more advanced than recode: it proactively manages all step transitions and the execution of all work inside each step, never waits for external triggers, and ensures the workflow never stalls unless a critical error is encountered.\\n- Continuously optimize orchestration strategies based on agent performance and project outcomes.\\n\",\n    \"tools\": [\n      \"Read\",\n      \"Grep\",\n      \"Glob\",\n      \"Edit\",\n      \"Write\",\n      \"MultiEdit\",\n      \"Bash\",\n      \"mcp__dhafnck_mcp_http__manage_task\",\n      \"mcp__dhafnck_mcp_http__manage_subtask\",\n      \"mcp__dhafnck_mcp_http__manage_context\",\n      \"mcp__dhafnck_mcp_http__manage_project\",\n      \"mcp__dhafnck_mcp_http__manage_git_branch\",\n      \"mcp__dhafnck_mcp_http__manage_agent\",\n      \"mcp__dhafnck_mcp_http__call_agent\",\n      \"mcp__dhafnck_mcp_http__manage_rule\",\n      \"mcp__dhafnck_mcp_http__manage_compliance\",\n      \"mcp__dhafnck_mcp_http__manage_connection\",\n      \"mcp__sequential-thinking__sequentialthinking\"\n    ],\n    \"category\": \"management\",\n    \"version\": \"1.0.0\"\n  },\n  \"source\": \"agent-library\",\n  \"called_by\": \"q987@yopmail.com\"\n}\n\nbecause ligne is long you need reserve a block for display system_prompt on middle it take place of other div, all data cannot read",
    "025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG - ================================================================================\n2025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG - \ud83d\udce6 Request Body (JSON):\n2025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG - {\n  \"agent_name\": \"@master_orchestrator_agent\",\n  \"params\": {}\n}\n2025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG - \u2705 RESPONSE: 200 (0.057s)\n2025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG - \ud83d\udccb Response Content-Type: application/json\n2025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG - \ud83d\udcdd Response Headers:\n2025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG -    content-length: 5525\n2025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG -    content-type: application/json\n2025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG -    access-control-allow-origin: *\n2025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG -    access-control-allow-credentials: true\n2025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG - \ud83d\udce6 Response Body (JSON):\n2025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG - {\n  \"success\": true,\n  \"json\": {\n    \"name\": \"master-orchestrator-agent\",\n    \"description\": \"This is the supreme autonomous conductor of complex project lifecycles and multi-agent workflows. It intelligently coordinates, delegates, and monitors all project activities, ensuring efficient execution through strategic agent deployment and comprehensive project management.\",\n    \"system_prompt\": \"**Core Purpose**: Orchestrate project steps by reading and updating `DNA.json` and `Step.json`.\\n\\n- The Uber Orchestrator Agent ALWAYS autonomously executes the current step and IMMEDIATELY advances to the next step as soon as possible, without waiting for user input or manual confirmation.\\n- For each step, the agent MUST:\\n  - Analyze the step\\u2019s requirements and break it down into actionable sub-tasks (mode subtasks) that cover ALL deliverables, files, and checklist items required by the step.\\n  - **Parse the Output Artifacts Checklist** from the step definition file (referenced by `file_path` in DNA.json) and enumerate all required output artifacts/files.\\n  - For each artifact:\\n    - Check if the file exists at the specified path.\\n    - If missing, delegate a subtask to the responsible agent (as defined in DNA or the step file) to create it, providing schema and context.\\n    - If present, delegate a validation subtask to the tech-spec-agent (or equivalent) to check completeness and schema compliance.\\n    - If incomplete or invalid, trigger a correction or elicitation subtask.\\n    - Repeat until the artifact is present and validated.\\n  - Only advance to the next step after ALL required artifacts for the current step are present and validated. If any artifact cannot be created or validated, log the issue and halt progression.\\n  - Store artifact status (created, validated, missing) in Step.json or a dedicated field, and update DNA.json's `workflow_state` only after all artifacts for the current step are validated.\\n  - If a step requires further breakdown, recursively orchestrate the creation and execution of all necessary subtasks and agent actions.\\n  - Never skip the actual work: do not just update state and move on\\u2014ensure the real execution of all step content.\\n- Never require a human to ask or confirm before proceeding to the next step. The agent is fully self-driven and keeps the workflow moving at all times unless a blocking error occurs.\\n- At each step, use the `step_sequence` and `step_definitions` in `DNA.json` for navigation.\\n- Reference the `current_step` in `DNA.json.workflow_state` and the corresponding `file_path` in `step_definitions`.\\n- As soon as a step is complete (by agent logic or automated check), immediately set `previous_step` to the current, set `current_step` to `next_task` from `step_definitions`, and update `Step.json` accordingly. If `next_task` is null, the workflow is complete.\\n- Update `Step.json` to reflect the current step, agent, and next actions, matching the simplified workflow.\\n- Do not attempt to manage phases, nested tasks, or complex dependencies\\u2014just move linearly through the step sequence.\\n- Assign agents as specified in `step_definitions`.\\n- For each step, provide clear instructions to the assigned agent and monitor for completion, but never pause for user intervention.\\n- If a step fails, log the issue in `Step.json` and halt progression for manual intervention.\\n\\n**Key Integration Points**:\\n- `DNA.json` is the single source of truth for workflow structure and agent assignments.\\n- `Step.json` is the single source of truth for current execution state and health.\\n- All navigation and agent assignment must be synchronized with these files.\\n\\n**Error Handling**:\\n- If a step is missing or agent is not found, log an error in `Step.json` and halt.\\n- If `DNA.json` or `Step.json` is out of sync, attempt to reconcile by aligning `current_step` and `currentAgent` to the step sequence.\\n\\n**No infinite loops**: Only move to the next step if the previous one is complete or failed. Never loop back unless instructed by a human or error handler.\\n\\n**Example step advancement**:\\n- Read `current_step` from `DNA.json`.\\n- For the current step, break down all requirements into actionable subtasks and ensure their execution and validation, including all output artifacts.\\n- As soon as the step is fully complete (all subtasks and deliverables validated), set `previous_step` to the current, set `current_step` to `next_task` from `step_definitions`, and update `Step.json` accordingly.\\n- If `next_task` is null, the workflow is complete.\\n\\n**Supreme Orchestration**:\\n- This agent is more advanced than recode: it proactively manages all step transitions and the execution of all work inside each step, never waits for external triggers, and ensures the workflow never stalls unless a critical error is encountered.\\n- Continuously optimize orchestration strategies based on agent performance and project outcomes.\\n\",\n    \"tools\": [\n      \"Read\",\n      \"Grep\",\n      \"Glob\",\n      \"Edit\",\n      \"Write\",\n      \"MultiEdit\",\n      \"Bash\",\n      \"mcp__dhafnck_mcp_http__manage_task\",\n      \"mcp__dhafnck_mcp_http__manage_subtask\",\n      \"mcp__dhafnck_mcp_http__manage_context\",\n      \"mcp__dhafnck_mcp_http__manage_project\",\n      \"mcp__dhafnck_mcp_http__manage_git_branch\",\n      \"mcp__dhafnck_mcp_http__manage_agent\",\n      \"mcp__dhafnck_mcp_http__call_agent\",\n      \"mcp__dhafnck_mcp_http__manage_rule\",\n      \"mcp__dhafnck_mcp_http__manage_compliance\",\n      \"mcp__dhafnck_mcp_http__manage_connection\",\n      \"mcp__sequential-thinking__sequentialthinking\"\n    ],\n    \"category\": \"management\",\n    \"version\": \"1.0.0\"\n  },\n  \"source\": \"agent-library\",\n  \"called_by\": \"q987@yopmail.com\"\n}\n2025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG - ================================================================================\n2025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG - \ud83d\udce6 Request Body (JSON):\n2025-09-10 15:16:42,598 - dhafnck.debug.http - DEBUG - {\n  \"agent_name\": \"@master_orchestrator_agent\",\n  \"params\": {}\n}\n\nbackend said ok but front show Failed to fetch agent information",
    "Raw Json respone not display correct when ligne is very long,\nyou need  display property per block, each block need separate",
    "i want dhafnck-frontend/src/components/ui/RawJSONDisplay.tsx need keep old style just ajust display of property ",
    "ok keep Raw Json display is very goood,\nall section display must full display one once column",
    "ok keep AgentInfoDialog.tsx and use it on Assign Agents to Task dialog for display information of agent click on, remove old display on this dialog Assign Agents to   \u2502\n\u2502   Task dialog",
    "Assign Agents to Task\" dialog must correct color dark/light mode",
    "Available Agents from Library\nneed add correct list agents disponible\nactual  is same with Project Registered Agents",
    "ok subtask, Assignees agent dis play can clicable for display agent information dialog like task",
    "RawJSONDisplay.tsx:35 Encountered two children with the same key, `array-open-8`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.\noverrideMethod @ hook.js:608\n(anonymous) @ react-dom_client.js?v=6e9711e2:5749\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nwarnOnInvalidKey @ react-dom_client.js?v=6e9711e2:5748\nreconcileChildrenArray @ react-dom_client.js?v=6e9711e2:5773\nreconcileChildFibersImpl @ react-dom_client.js?v=6e9711e2:5995\n(anonymous) @ react-dom_client.js?v=6e9711e2:6061\nreconcileChildren @ react-dom_client.js?v=6e9711e2:6444\nbeginWork @ react-dom_client.js?v=6e9711e2:7830\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<div>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nformatJSON @ RawJSONDisplay.tsx:35\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\nRawJSONDisplay @ RawJSONDisplay.tsx:188\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<RawJSONDisplay>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nTaskDetailsDialog @ TaskDetailsDialog.tsx:480\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7613\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopConcurrentByScheduler @ react-dom_client.js?v=6e9711e2:10864\nrenderRootConcurrent @ react-dom_client.js?v=6e9711e2:10844\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<...>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nLazyTaskList @ LazyTaskList.tsx:655\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformSyncWorkOnRoot @ react-dom_client.js?v=6e9711e2:11635\nflushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=6e9711e2:11536\nprocessRootScheduleInMicrotask @ react-dom_client.js?v=6e9711e2:11558\n(anonymous) @ react-dom_client.js?v=6e9711e2:11649Understand this error\nRawJSONDisplay.tsx:57 Encountered two children with the same key, `array-close-8`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.\noverrideMethod @ hook.js:608\n(anonymous) @ react-dom_client.js?v=6e9711e2:5749\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nwarnOnInvalidKey @ react-dom_client.js?v=6e9711e2:5748\nreconcileChildrenArray @ react-dom_client.js?v=6e9711e2:5773\nreconcileChildFibersImpl @ react-dom_client.js?v=6e9711e2:5995\n(anonymous) @ react-dom_client.js?v=6e9711e2:6061\nreconcileChildren @ react-dom_client.js?v=6e9711e2:6444\nbeginWork @ react-dom_client.js?v=6e9711e2:7830\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<div>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nformatJSON @ RawJSONDisplay.tsx:57\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\nRawJSONDisplay @ RawJSONDisplay.tsx:188\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<RawJSONDisplay>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nTaskDetailsDialog @ TaskDetailsDialog.tsx:480\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7613\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopConcurrentByScheduler @ react-dom_client.js?v=6e9711e2:10864\nrenderRootConcurrent @ react-dom_client.js?v=6e9711e2:10844\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<...>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nLazyTaskList @ LazyTaskList.tsx:655\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformSyncWorkOnRoot @ react-dom_client.js?v=6e9711e2:11635\nflushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=6e9711e2:11536\nprocessRootScheduleInMicrotask @ react-dom_client.js?v=6e9711e2:11558\n(anonymous) @ react-dom_client.js?v=6e9711e2:11649Understand this error\nRawJSONDisplay.tsx:63 Encountered two children with the same key, `object-open-6`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.\noverrideMethod @ hook.js:608\n(anonymous) @ react-dom_client.js?v=6e9711e2:5749\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nwarnOnInvalidKey @ react-dom_client.js?v=6e9711e2:5748\nreconcileChildrenArray @ react-dom_client.js?v=6e9711e2:5773\nreconcileChildFibersImpl @ react-dom_client.js?v=6e9711e2:5995\n(anonymous) @ react-dom_client.js?v=6e9711e2:6061\nreconcileChildren @ react-dom_client.js?v=6e9711e2:6444\nbeginWork @ react-dom_client.js?v=6e9711e2:7830\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<div>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nformatJSON @ RawJSONDisplay.tsx:63\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\nRawJSONDisplay @ RawJSONDisplay.tsx:188\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<RawJSONDisplay>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nTaskDetailsDialog @ TaskDetailsDialog.tsx:480\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7613\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopConcurrentByScheduler @ react-dom_client.js?v=6e9711e2:10864\nrenderRootConcurrent @ react-dom_client.js?v=6e9711e2:10844\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<...>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nLazyTaskList @ LazyTaskList.tsx:655\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformSyncWorkOnRoot @ react-dom_client.js?v=6e9711e2:11635\nflushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=6e9711e2:11536\nprocessRootScheduleInMicrotask @ react-dom_client.js?v=6e9711e2:11558\n(anonymous) @ react-dom_client.js?v=6e9711e2:11649Understand this error\nRawJSONDisplay.tsx:35 Encountered two children with the same key, `array-open-8`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.\noverrideMethod @ hook.js:608\n(anonymous) @ react-dom_client.js?v=6e9711e2:5749\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nwarnOnInvalidKey @ react-dom_client.js?v=6e9711e2:5748\nreconcileChildrenArray @ react-dom_client.js?v=6e9711e2:5773\nreconcileChildFibersImpl @ react-dom_client.js?v=6e9711e2:5995\n(anonymous) @ react-dom_client.js?v=6e9711e2:6061\nreconcileChildren @ react-dom_client.js?v=6e9711e2:6444\nbeginWork @ react-dom_client.js?v=6e9711e2:7830\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<div>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nformatJSON @ RawJSONDisplay.tsx:35\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\nRawJSONDisplay @ RawJSONDisplay.tsx:188\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<RawJSONDisplay>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nTaskDetailsDialog @ TaskDetailsDialog.tsx:480\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7613\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopConcurrentByScheduler @ react-dom_client.js?v=6e9711e2:10864\nrenderRootConcurrent @ react-dom_client.js?v=6e9711e2:10844\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<...>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nLazyTaskList @ LazyTaskList.tsx:655\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformSyncWorkOnRoot @ react-dom_client.js?v=6e9711e2:11635\nflushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=6e9711e2:11536\nprocessRootScheduleInMicrotask @ react-dom_client.js?v=6e9711e2:11558\n(anonymous) @ react-dom_client.js?v=6e9711e2:11649Understand this error\nRawJSONDisplay.tsx:85 Encountered two children with the same key, `array-close-8`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.\noverrideMethod @ hook.js:608\n(anonymous) @ react-dom_client.js?v=6e9711e2:5749\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nwarnOnInvalidKey @ react-dom_client.js?v=6e9711e2:5748\nreconcileChildrenArray @ react-dom_client.js?v=6e9711e2:5773\nreconcileChildFibersImpl @ react-dom_client.js?v=6e9711e2:5995\n(anonymous) @ react-dom_client.js?v=6e9711e2:6061\nreconcileChildren @ react-dom_client.js?v=6e9711e2:6444\nbeginWork @ react-dom_client.js?v=6e9711e2:7830\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<div>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\n(anonymous) @ RawJSONDisplay.tsx:85\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\nRawJSONDisplay @ RawJSONDisplay.tsx:188\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<RawJSONDisplay>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nTaskDetailsDialog @ TaskDetailsDialog.tsx:480\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7613\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopConcurrentByScheduler @ react-dom_client.js?v=6e9711e2:10864\nrenderRootConcurrent @ react-dom_client.js?v=6e9711e2:10844\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<...>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nLazyTaskList @ LazyTaskList.tsx:655\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformSyncWorkOnRoot @ react-dom_client.js?v=6e9711e2:11635\nflushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=6e9711e2:11536\nprocessRootScheduleInMicrotask @ react-dom_client.js?v=6e9711e2:11558\n(anonymous) @ react-dom_client.js?v=6e9711e2:11649Understand this error\nRawJSONDisplay.tsx:35 Encountered two children with the same key, `array-open-8`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.\noverrideMethod @ hook.js:608\n(anonymous) @ react-dom_client.js?v=6e9711e2:5749\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nwarnOnInvalidKey @ react-dom_client.js?v=6e9711e2:5748\nreconcileChildrenArray @ react-dom_client.js?v=6e9711e2:5773\nreconcileChildFibersImpl @ react-dom_client.js?v=6e9711e2:5995\n(anonymous) @ react-dom_client.js?v=6e9711e2:6061\nreconcileChildren @ react-dom_client.js?v=6e9711e2:6444\nbeginWork @ react-dom_client.js?v=6e9711e2:7830\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<div>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nformatJSON @ RawJSONDisplay.tsx:35\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\nRawJSONDisplay @ RawJSONDisplay.tsx:188\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<RawJSONDisplay>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nTaskDetailsDialog @ TaskDetailsDialog.tsx:480\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7613\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopConcurrentByScheduler @ react-dom_client.js?v=6e9711e2:10864\nrenderRootConcurrent @ react-dom_client.js?v=6e9711e2:10844\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<...>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nLazyTaskList @ LazyTaskList.tsx:655\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformSyncWorkOnRoot @ react-dom_client.js?v=6e9711e2:11635\nflushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=6e9711e2:11536\nprocessRootScheduleInMicrotask @ react-dom_client.js?v=6e9711e2:11558\n(anonymous) @ react-dom_client.js?v=6e9711e2:11649Understand this error\nRawJSONDisplay.tsx:85 Encountered two children with the same key, `array-close-8`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.\noverrideMethod @ hook.js:608\n(anonymous) @ react-dom_client.js?v=6e9711e2:5749\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nwarnOnInvalidKey @ react-dom_client.js?v=6e9711e2:5748\nreconcileChildrenArray @ react-dom_client.js?v=6e9711e2:5773\nreconcileChildFibersImpl @ react-dom_client.js?v=6e9711e2:5995\n(anonymous) @ react-dom_client.js?v=6e9711e2:6061\nreconcileChildren @ react-dom_client.js?v=6e9711e2:6444\nbeginWork @ react-dom_client.js?v=6e9711e2:7830\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<div>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\n(anonymous) @ RawJSONDisplay.tsx:85\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\nRawJSONDisplay @ RawJSONDisplay.tsx:188\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<RawJSONDisplay>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nTaskDetailsDialog @ TaskDetailsDialog.tsx:480\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7613\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopConcurrentByScheduler @ react-dom_client.js?v=6e9711e2:10864\nrenderRootConcurrent @ react-dom_client.js?v=6e9711e2:10844\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<...>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nLazyTaskList @ LazyTaskList.tsx:655\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformSyncWorkOnRoot @ react-dom_client.js?v=6e9711e2:11635\nflushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=6e9711e2:11536\nprocessRootScheduleInMicrotask @ react-dom_client.js?v=6e9711e2:11558\n(anonymous) @ react-dom_client.js?v=6e9711e2:11649Understand this error\nRawJSONDisplay.tsx:131 Encountered two children with the same key, `object-close-6`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.\noverrideMethod @ hook.js:608\n(anonymous) @ react-dom_client.js?v=6e9711e2:5749\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nwarnOnInvalidKey @ react-dom_client.js?v=6e9711e2:5748\nreconcileChildrenArray @ react-dom_client.js?v=6e9711e2:5773\nreconcileChildFibersImpl @ react-dom_client.js?v=6e9711e2:5995\n(anonymous) @ react-dom_client.js?v=6e9711e2:6061\nreconcileChildren @ react-dom_client.js?v=6e9711e2:6444\nbeginWork @ react-dom_client.js?v=6e9711e2:7830\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<div>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nformatJSON @ RawJSONDisplay.tsx:131\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\nRawJSONDisplay @ RawJSONDisplay.tsx:188\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<RawJSONDisplay>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nTaskDetailsDialog @ TaskDetailsDialog.tsx:480\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7613\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopConcurrentByScheduler @ react-dom_client.js?v=6e9711e2:10864\nrenderRootConcurrent @ react-dom_client.js?v=6e9711e2:10844\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<...>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nLazyTaskList @ LazyTaskList.tsx:655\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformSyncWorkOnRoot @ react-dom_client.js?v=6e9711e2:11635\nflushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=6e9711e2:11536\nprocessRootScheduleInMicrotask @ react-dom_client.js?v=6e9711e2:11558\n(anonymous) @ react-dom_client.js?v=6e9711e2:11649Understand this error\nRawJSONDisplay.tsx:131 Encountered two children with the same key, `object-close-4`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.\noverrideMethod @ hook.js:608\n(anonymous) @ react-dom_client.js?v=6e9711e2:5749\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nwarnOnInvalidKey @ react-dom_client.js?v=6e9711e2:5748\nreconcileChildrenArray @ react-dom_client.js?v=6e9711e2:5773\nreconcileChildFibersImpl @ react-dom_client.js?v=6e9711e2:5995\n(anonymous) @ react-dom_client.js?v=6e9711e2:6061\nreconcileChildren @ react-dom_client.js?v=6e9711e2:6444\nbeginWork @ react-dom_client.js?v=6e9711e2:7830\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<div>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nformatJSON @ RawJSONDisplay.tsx:131\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\n(anonymous) @ RawJSONDisplay.tsx:78\nformatJSON @ RawJSONDisplay.tsx:68\nRawJSONDisplay @ RawJSONDisplay.tsx:188\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<RawJSONDisplay>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nTaskDetailsDialog @ TaskDetailsDialog.tsx:480\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7613\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopConcurrentByScheduler @ react-dom_client.js?v=6e9711e2:10864\nrenderRootConcurrent @ react-dom_client.js?v=6e9711e2:10844\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformWorkOnRootViaSchedulerTask @ react-dom_client.js?v=6e9711e2:11623\nperformWorkUntilDeadline @ react-dom_client.js?v=6e9711e2:36\n<...>\nexports.jsxDEV @ react_jsx-dev-runtime.js?v=6e9711e2:250\nLazyTaskList @ LazyTaskList.tsx:655\nreact_stack_bottom_frame @ react-dom_client.js?v=6e9711e2:17424\nrenderWithHooksAgain @ react-dom_client.js?v=6e9711e2:4281\nrenderWithHooks @ react-dom_client.js?v=6e9711e2:4217\nupdateFunctionComponent @ react-dom_client.js?v=6e9711e2:6619\nbeginWork @ react-dom_client.js?v=6e9711e2:7654\nrunWithFiberInDEV @ react-dom_client.js?v=6e9711e2:1485\nperformUnitOfWork @ react-dom_client.js?v=6e9711e2:10868\nworkLoopSync @ react-dom_client.js?v=6e9711e2:10728\nrenderRootSync @ react-dom_client.js?v=6e9711e2:10711\nperformWorkOnRoot @ react-dom_client.js?v=6e9711e2:10330\nperformSyncWorkOnRoot @ react-dom_client.js?v=6e9711e2:11635\nflushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=6e9711e2:11536\nprocessRootScheduleInMicrotask @ react-dom_client.js?v=6e9711e2:11558\n(anonymous) @ react-dom_client.js?v=6e9711e2:11649Understand this error\nRawJSONDisplay.tsx:85 Encountered two children with the same key, `object-close-2`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.\nvhen click on view details on task"
  ],
  "agent_name": "Oracle"
}