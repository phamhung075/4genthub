# Active Role Configuration
# Warnings and behaviors for agent roles
# Tools are loaded dynamically from mcp__dhafnck_mcp_http__call_agent response

version: "2.0"
enabled: true
mode: "dynamic"  # Tools loaded from call_agent response

roles:
  master-orchestrator-agent:
    description: "Coordinates work and delegates to specialized agents"
    # Tools dynamically loaded from call_agent response
    # Common warnings for blocked operations:
    warnings:
      write_attempt: |
        [ROLE VIOLATION] Master-orchestrator cannot write code!
        You should delegate to coding-agent:
        1. Create MCP task with implementation details
        2. Task(subagent_type="coding-agent", prompt=f"task_id: {task_id}")
      edit_attempt: |
        [ROLE VIOLATION] Master-orchestrator cannot edit files!
        You should delegate to appropriate agent:
        - For code: coding-agent
        - For debugging: debugger-agent
        - For tests: test-orchestrator-agent
        - For documentation: documentation-agent

  coding-agent:
    description: "Implements features and writes code"
    warnings:
      delegation_attempt: |
        [ROLE VIOLATION] Coding-agent cannot delegate to other agents!
        Focus on implementing the assigned task.
        If you need help from another agent, complete your work and report back.

  test-orchestrator-agent:
    description: "Creates and manages tests"
    path_restrictions:
      write_paths:  # Can only write to test directories
        - "*/tests/*"
        - "*/__tests__/*"
        - "*/test/*"
        - "*/spec/*"
    warnings:
      wrong_path: |
        [ROLE VIOLATION] Test files must be in test directories!
        Valid paths: tests/, __tests__/, test/, spec/

# Default role (if no agent is loaded)
default_role:
  name: "uninitialized"
  # Minimal tools until agent is loaded
  bootstrap_tools:
    - "mcp__dhafnck_mcp_http__call_agent"  # Must be able to initialize
  warning: |
    [NO ROLE LOADED] You must call mcp__dhafnck_mcp_http__call_agent first!
    Example: mcp__dhafnck_mcp_http__call_agent("master-orchestrator-agent")

# Keep enforcement and tool_categories for reference
enforcement:
  strict_mode: true
  log_violations: true
  log_file: ".claude/hooks/logs/role_violations.log"
  show_warnings: true
  allow_override: false
  override_keyword: "EMERGENCY_OVERRIDE"