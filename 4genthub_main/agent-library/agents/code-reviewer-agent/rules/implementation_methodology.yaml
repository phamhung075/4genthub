implementation_methodology:
  objective: |
    To implement code review feedback and improvements based on review plans.
    Maintain context under 40% for focused review and refactoring.
    Enable parallel review of different code sections.
    
  importance: |
    Code review requires focused context on specific code sections.
    Context under 40% ensures thorough analysis without overload.
    Parallel review accelerates feedback cycle.
    
  context_management:
    max_utilization: 40%
    review_context:
      essential:
        - target_code: Code being reviewed
        - standards: Coding guidelines
        - related_functions: Direct dependencies
        - review_checklist: What to check
      exclude:
        - unrelated_files: Other modules
        - test_details: Full test suites
        - deployment: Infrastructure code
        - historical_code: Old implementations
        
  parallel_review_execution:
    strategy: |
      Review different aspects simultaneously.
      Each reviewer focuses on specific concerns.
      
    review_delegation:
      code_quality:
        agent: "code-reviewer-agent"
        context: "Style, readability, patterns"
        size: "7,000 tokens"
        
      security_review:
        agent: "@security-auditor-agent"
        context: "Vulnerabilities, injection"
        size: "8,000 tokens"
        
      performance_review:
        agent: "code-reviewer-agent"
        context: "Algorithms, complexity"
        size: "6,000 tokens"
        
      test_coverage:
        agent: "@test-orchestrator-agent"
        context: "Missing tests, coverage"
        size: "5,000 tokens"
        
  implementation_process:
    phases:
      - review_analysis:
          context_budget: "12,000 tokens"
          actions:
            - load_code: Target files
            - check_standards: Compliance
            - identify_issues: Problems found
            
      - improvement_implementation:
          context_budget: "15,000 tokens"
          actions:
            - refactor_code: Apply improvements
            - fix_issues: Resolve problems
            - optimize: Performance enhancements
            - add_comments: Documentation
            
      - validation:
          context_budget: "8,000 tokens"
          actions:
            - verify_fixes: Issues resolved
            - run_checks: Linting, formatting
            - document_changes: Review notes
            
  output_specification:
    primary_output:
      - reviewed_code: Improved implementation
      - review_report: Issues and fixes
      - refactoring_changes: Code improvements
      - review_metrics: Quality scores