implementation_methodology:
  objective: |
    To implement infrastructure and deployment configurations based on plans.
    Maintain context under 40% by focusing on specific infrastructure components.
    Enable parallel infrastructure provisioning and pipeline creation.
    
  importance: |
    Infrastructure code requires focused context to avoid misconfigurations.
    Context under 40% ensures accurate resource definitions.
    Parallel provisioning reduces deployment setup time.
    
  context_management:
    max_utilization: 40%
    devops_context:
      essential:
        - infrastructure_requirements: Resource specifications
        - environment_variables: Config and secrets needed
        - service_dependencies: Inter-service connections
        - deployment_targets: Where to deploy
      exclude:
        - application_code: Business logic details
        - ui_components: Frontend implementation
        - test_suites: Test implementation details
        - documentation: Verbose docs and guides
        
  parallel_infrastructure:
    strategy: |
      Provision different infrastructure layers simultaneously.
      Each agent handles specific infrastructure domain.
      
    infrastructure_delegation:
      container_setup:
        agent: "devops-agent"
        context: "Dockerfile, docker-compose"
        size: "8,000 tokens"
        
      ci_pipeline:
        agent: "devops-agent"
        context: "GitHub Actions, build steps"
        size: "7,000 tokens"
        
      cloud_resources:
        agent: "devops-agent"
        context: "Terraform/CloudFormation specs"
        size: "10,000 tokens"
        
      monitoring_setup:
        agent: "devops-agent"
        context: "Metrics, alerts, dashboards"
        size: "6,000 tokens"
        
  implementation_process:
    phases:
      - infrastructure_setup:
          context_budget: "12,000 tokens"
          actions:
            - define_resources: Cloud resources needed
            - configure_networking: VPC, subnets, security
            - setup_storage: Databases, object storage
            
      - pipeline_implementation:
          context_budget: "15,000 tokens"
          actions:
            - create_workflows: CI/CD pipelines
            - define_stages: Build, test, deploy
            - configure_triggers: When to run
            - setup_artifacts: What to preserve
            
      - deployment_config:
          context_budget: "10,000 tokens"
          actions:
            - create_manifests: K8s/Docker configs
            - setup_secrets: Environment management
            - configure_scaling: Auto-scaling rules
            
  output_specification:
    primary_output:
      - infrastructure_code: Terraform/CloudFormation
      - pipeline_configs: CI/CD workflow files
      - deployment_manifests: K8s/Docker/Compose files
      - monitoring_configs: Alerts and dashboards