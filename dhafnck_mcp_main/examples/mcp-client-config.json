{
  "description": "Example MCP client configuration with Bearer token authentication",
  "note": "Replace YOUR_JWT_TOKEN_HERE with your actual token from the Token Management page",
  "configurations": {
    "cursor": {
      "file": ".cursor/mcp.json",
      "content": {
        "mcpServers": {
          "dhafnck_mcp_http": {
            "type": "http",
            "url": "http://localhost:8000/mcp/",
            "headers": {
              "Accept": "application/json, text/event-stream",
              "Authorization": "Bearer YOUR_JWT_TOKEN_HERE"
            }
          }
        }
      }
    },
    "vscode": {
      "file": ".vscode/settings.json",
      "content": {
        "mcp.servers": {
          "dhafnck_mcp_http": {
            "type": "http",
            "url": "http://localhost:8000/mcp/",
            "headers": {
              "Accept": "application/json, text/event-stream",
              "Authorization": "Bearer YOUR_JWT_TOKEN_HERE"
            }
          }
        }
      }
    },
    "environment": {
      "file": ".env",
      "content": "# MCP Authentication Token\n# Generate from: http://localhost:3800/tokens\nMCP_AUTH_TOKEN=YOUR_JWT_TOKEN_HERE\n\n# Server configuration\nMCP_SERVER_URL=http://localhost:8000/mcp/\n"
    }
  },
  "token_generation_steps": [
    "1. Open http://localhost:3800 in your browser",
    "2. Log in with your credentials",
    "3. Click the API Tokens link (key icon) in the header",
    "4. Go to the Generate Token tab",
    "5. Enter a name for your token (e.g., 'MCP Client - Development')",
    "6. Select required scopes:",
    "   - execute:mcp (required for MCP commands)",
    "   - read:tasks (to read task data)",
    "   - write:tasks (to create/modify tasks)",
    "   - read:context (to read context)",
    "   - write:context (to modify context)",
    "7. Set expiration (e.g., 30 days for development)",
    "8. Click Generate Token",
    "9. IMPORTANT: Copy the token immediately - it won't be shown again!",
    "10. Replace YOUR_JWT_TOKEN_HERE in your configuration with the copied token"
  ],
  "security_notes": [
    "Never commit tokens to version control",
    "Add configuration files with tokens to .gitignore",
    "Use environment variables for production deployments",
    "Rotate tokens regularly (every 30-90 days)",
    "Revoke tokens immediately if compromised",
    "Use minimal scopes needed for your use case"
  ]
}