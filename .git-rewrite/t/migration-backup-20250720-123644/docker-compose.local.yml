# Docker Compose override for local development without authentication
# Usage: docker-compose -f docker-compose.yml -f docker-compose.local.yml up

services:
  dhafnck-mcp:
    # Override environment variables to disable authentication
    environment:
      DHAFNCK_AUTH_ENABLED: false
      DHAFNCK_MVP_MODE: false
      DHAFNCK_DISABLE_CURSOR_TOOLS: false
      FASTMCP_LOG_LEVEL: INFO
      FASTMCP_ENABLE_RICH_TRACEBACKS: 1
      FASTMCP_TEST_MODE: 0
      DEV_MODE: 1
      DEV_PORT: 8000
      PYTHONPATH: /app/src
      TASKS_JSON_PATH: /data/tasks
      PROJECTS_FILE_PATH: /data/projects/projects.json
      CURSOR_RULES_DIR: /data/rules
      AGENT_LIBRARY_DIR_PATH: /app/agent-library
      FASTMCP_TRANSPORT: streamable-http
      FASTMCP_HOST: 0.0.0.0
      FASTMCP_PORT: 8000
      SUPABASE_URL: ""
      SUPABASE_ANON_KEY: ""
      DHAFNCK_TOKEN: ""
      REDIS_URL: redis://redis:6379/0
      SESSION_TTL: 3600
      MAX_EVENTS_PER_SESSION: 1000
      SESSION_COMPRESSION: true
      SESSION_KEY_PREFIX: "mcp:session:"
      REDIS_SOCKET_TIMEOUT: 5
      REDIS_CONNECT_TIMEOUT: 5
      REDIS_HEALTH_CHECK_INTERVAL: 30
      SESSION_PERSISTENCE_ENABLED: true
      FALLBACK_TO_MEMORY: true
      SESSION_DEBUG_LOGGING: true
    
    # Development ports
    ports:
      - "8000:8000"
      - "8001:8001"  # Additional debug port if needed
    
    # Remove resource limits for development
    deploy:
      resources: {}
    
    # Development logging (more verbose)
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    
    # Mount source code for live development (optional)
    volumes:
      # Data persistence (inherited from base)
      - dhafnck_data:/data
      - dhafnck_logs:/app/logs
      
      # Configuration files (inherited from base)
      - ./config:/app/config:ro
      
      # Development: mount source code for live reload (uncomment if needed)
      # - ./src:/app/src:ro
      # - ./pyproject.toml:/app/pyproject.toml:ro
      # - ./uv.lock:/app/uv.lock:ro
      - redis_data:/data
    
    depends_on:
      redis:
        condition: service_healthy
    command: ["python", "-m", "fastmcp"]
  redis:
    image: redis:7-alpine
    container_name: dhafnck-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
        reservations:
          memory: 128M
          cpus: '0.1'
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  dhafnck_data:
    driver: local
  dhafnck_logs:
    driver: local
  redis_data:
    driver: local 