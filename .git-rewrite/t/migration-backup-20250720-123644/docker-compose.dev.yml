# Development overrides for Docker Compose
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  dhafnck-mcp:
    build:
      target: builder  # Use builder stage for development
    
    # Development environment variables
    environment:
      PYTHONPATH: /app/src
      FASTMCP_LOG_LEVEL: DEBUG
      FASTMCP_ENABLE_RICH_TRACEBACKS: 1
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      DEVELOPMENT_MODE: true
      HOT_RELOAD: true
      WATCHDOG_ENABLED: true
      RELOAD_DELAY: 0.1  # Faster reload detection
      REDIS_URL: redis://redis:6379/0
      SESSION_TTL: 3600
      MAX_EVENTS_PER_SESSION: 1000
      SESSION_COMPRESSION: true
      SESSION_KEY_PREFIX: "mcp:session:"
      REDIS_SOCKET_TIMEOUT: 5
      REDIS_CONNECT_TIMEOUT: 5
      REDIS_HEALTH_CHECK_INTERVAL: 30
      SESSION_PERSISTENCE_ENABLED: true
      FALLBACK_TO_MEMORY: true
      SESSION_DEBUG_LOGGING: true
    
    # Mount source code for live reload with optimized sync
    volumes:
      - ./src:/app/src:cached  # Use cached mode for better performance
      - ./tests:/app/tests:cached  # Mount tests for in-container testing
      # Mount rule files from parent project for development
      - ../00_RULES:/data/rules/mounted:cached  # Your actual rule files
      - redis_data:/data
      - dhafnck_data:/data
      - dhafnck_logs:/app/logs
    
    # Remove resource limits for development
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
        reservations:
          memory: 128M
          cpus: '0.1'
    
    # Development ports (if needed for debugging)
    ports:
      - "8000:8000"
      - "8001:8001"  # Additional debug port
    
    # Development logging (more verbose)
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    # Override entrypoint for development
    entrypoint: ["/app/scripts/dev-entrypoint.sh"]
    
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    container_name: dhafnck-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
        reservations:
          memory: 128M
          cpus: '0.1'
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    security_opt:
      - no-new-privileges:true

volumes:
  dhafnck_data:
    driver: local
  dhafnck_logs:
    driver: local
  redis_data:
    driver: local 